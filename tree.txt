.
├── 1 Algorithmic toolbox
│   ├── week1
│   │   ├── maximum_pairwise_product.py
│   │   └── sumofAandB.py
│   ├── week2
│   │   ├── LastDigitOfThePartialSumOfFibonacciNumbers.py
│   │   ├── LastDigitoftheSumofFibonacciNumbers.py
│   │   ├── fib.py
│   │   ├── greatest_common_divisor.py
│   │   ├── huge_fibonachi_number_again.py
│   │   ├── last_digit_fib.py
│   │   └── lcm.py
│   ├── week3 greedy algorithms
│   │   ├── carFueling.py
│   │   ├── maximumAdvertisementRevenue.py
│   │   ├── maximumSalary.py
│   │   ├── maximumValueOfLoot.py
│   │   └── moneyChange.py
│   ├── week4 divide and conqueror
│   │   ├── 4.2.1BinarySearch.py
│   │   ├── 4.2.2BinarySearchWithDuplicates.py
│   │   └── 4.2.3MajorityElement.py
│   ├── week5 dynamic programming
│   │   ├── changeProblem.py
│   │   ├── editDistance.py
│   │   └── primitiveCalculator.py
│   └── week6 dynamic programming
│       ├── gold.py
│       └── parenthesis.py
├── 2 Data Structures
│   ├── week1
│   │   ├── 2Tree.py
│   │   ├── bst.py
│   │   ├── checkBrackets.py
│   │   ├── maxStack.py
│   │   └── slidingWindow.py
│   ├── week3
│   │   ├── build_heap.py
│   │   ├── heap.py
│   │   ├── make_min_heap.py
│   │   └── parallel_processing.py
│   ├── week4
│   │   ├── 1_phone_book
│   │   │   └── phone_book.py
│   │   └── 2_hash_chains
│   │       ├── hash_chains.py
│   │       └── tests
│   │           ├── 06
│   │           └── 06.a
│   └── week6
│       ├── is_bst.py
│       ├── is_bst2.py
│       ├── is_bst_hard.py
│       └── tree-orders.py
├── 3 Algorithms on Graphs
│   ├── week1
│   │   └── finding_an_exit_from_a_maze.py
│   ├── week2
│   │   ├── acyclic.py
│   │   ├── detect_cycle.py
│   │   └── topologicalsort.py
│   ├── week3
│   │   └── breadth_first_search.py
│   ├── week4
│   │   ├── dijkstra.py
│   │   ├── negative_cycle.py
│   │   └── priority_queue.py
│   └── week5
│       ├── 1_connecting_points
│       │   └── connecting_points.py
│       ├── disjoinset.py
│       └── krusal.py
├── 4 Algorithms on Strings
│   ├── week1
│   │   ├── 1Construct a Trie from a Collection of Patterns.py
│   │   ├── 2Multiple Pattern Matching.py
│   │   ├── 3Generalized Multiple Pattern Matching.py
│   │   └── trie.py
│   └── week2
│       ├── bwt.py
│       ├── bwtinverse_new.py
│       └── bwtinverse_slow.py
├── README.md
├── backtracking
│   ├── longestIncreasingSubsequence.py
│   ├── longestIncreasingSubsequence2.py
│   ├── placeQueens.py
│   ├── subsequence
│   │   └── subsequence.py
│   ├── subsetSum.py
│   └── textsegmentation
│       ├── textSegmentation.py
│       └── words.webarchive
├── binary trees
│   ├── 1 implementation of binary tree
│   │   └── Node.py
│   └── 2 implementation of binary tree no null
│       └── Tree.py
├── coding interview patterns
│   ├── heaps
│   │   └── K most frequent Strings.py
│   ├── intervals
│   │   └── MergeOverlapingIntervals.py
│   └── prefix sums
│       ├── 1 prefix_sums.py
│       ├── 2 sum_between_range.py
│       ├── 3 k sum subarrays slow.py
│       ├── 4 K sum subarrays.py
│       └── 5 product array without current element.py
├── dynamic programming
│   ├── 13 Longest increasing subsequence.py
│   ├── 2 Optimal stock market strategy
│   │   └── Optimal stock market strategy iterative.py
│   └── editDistance.py
├── examples
│   └── rootn.py
├── hacker rank
│   ├── algorithms
│   │   ├── implementation
│   │   │   └── Sherlock_and_the_Beast.py
│   │   ├── strings
│   │   │   └── pangrams.py
│   │   └── warmup
│   │       ├── Diagonal-difference.py
│   │       └── Time_Conversion.py
│   └── python
│       ├── README.md
│       ├── data types
│       │   ├── find_the_second_largest_number.py
│       │   ├── lists.py
│       │   ├── nested_lists.py
│       │   ├── sets.py
│       │   └── tupules.py
│       ├── introduction
│       │   ├── 1.py
│       │   ├── Arithmetic_Operators.py
│       │   ├── Raw_Input.py
│       │   └── percentage.py
│       ├── itertools
│       │   ├── combination_with_replacement.py
│       │   ├── combinations.py
│       │   ├── compress_the_string!.py
│       │   ├── itertools_permutations.py
│       │   └── itertools_product().py
│       ├── sets
│       │   ├── and.py
│       │   ├── difference.py
│       │   ├── introduction_to_sets.py
│       │   ├── no_idea.py
│       │   ├── set_add().py
│       │   ├── set_discard_remove_pop.py
│       │   ├── symmetric.py
│       │   └── union.py
│       └── strings
│           ├── find_a_string.py
│           └── string-validators.py
├── leetcode
│   ├── LeetCode 75
│   │   ├── 1004. Max Consecutive Ones III.py
│   │   ├── 1071. Greatest Common Divisor of Strings.py
│   │   ├── 1207. Unique Number of Occurrences.py
│   │   ├── 1431. Kids With the Greatest Number of Candies.py
│   │   ├── 1448. Count Good Nodes in Binary Tree.py
│   │   ├── 1456. Maximum Number of Vowels in a Substring of Given Length.py
│   │   ├── 1493. Longest Subarray of 1's After Deleting One Element.py
│   │   ├── 151. Reverse Words in a String.py
│   │   ├── 1732. Find the Highest Altitude.py
│   │   ├── 1768. Merge Strings Alternately
│   │   │   └── solution.py
│   │   ├── 206. Reverse Linked List.py
│   │   ├── 2095. Delete the Middle Node of a Linked List.py
│   │   ├── 2130. Maximum Twin Sum of a Linked List.py
│   │   ├── 2215. Find the Difference of Two Arrays.py
│   │   ├── 2352. Equal Row and Column Pairs.py
│   │   ├── 238. Product of Array Except Self.py
│   │   ├── 2390. Removing Stars From a String.py
│   │   ├── 283. Move Zeroes.py
│   │   ├── 328. Odd Even Linked List.py
│   │   ├── 334. Increasing Triplet Subsequence.py
│   │   ├── 345. Reverse Vowels of a String.py
│   │   ├── 392. Is Subsequence.py
│   │   ├── 605. Can Place Flowers.py
│   │   ├── 643. Maximum Average Subarray I.py
│   │   ├── 700. Search in a Binary Search Tree.py
│   │   ├── 724. Find Pivot Index.py
│   │   ├── 735. Asteroid Collision.py
│   │   └── 872. Leaf-Similar Trees.py
│   └── easy
│       ├── 100. Same Tree.py
│       ├── 101. Symmetric Tree.py
│       ├── 1046. Last Stone Weight.py
│       ├── 111. Minimum Depth of Binary Tree.py
│       ├── 112. Path Sum.py
│       ├── 144. Binary Tree Preorder Traversal.py
│       ├── 145. Binary Tree Postorder Traversal.py
│       ├── 1768. Merge Strings Alternately
│       │   └── solution.py
│       ├── 21. Merge Two Sorted Lists.py
│       ├── 222. Count Complete Tree Nodes.py
│       ├── 226. Invert Binary Tree.py
│       ├── 2974. Minimum Number Game.py
│       ├── 404. Sum of Left Leaves.py
│       ├── 501. Find Mode in Binary Search Tree.py
│       ├── 506. Relative Ranks.py
│       ├── 530. Minimum Absolute Difference in BST.py
│       ├── 543. Diameter of Binary Tree.py
│       ├── 67. Add Binary
│       │   └── Solution.py
│       ├── 9. Palindrome Number
│       │   └── palindrome.py
│       ├── 94. Binary Tree Inorder Traversal.py
│       └── 993. Cousins in Binary Tree.py
├── mathematical-thinking-in-cs
│   ├── puzzle1.py
│   └── puzzle2.py
├── recursion
│   └── towerOfHanoi.py
├── sorting
│   ├── BubbleSort.java
│   ├── MergeSort.java
│   ├── SelectionSort.java
│   └── quicksort.py
└── tree.txt

60 directories, 164 files
